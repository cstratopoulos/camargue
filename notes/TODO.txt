change options to getopt_long

just make timer a namespace and profiler have the void print profile
functions
or maybe re-explore timer class and name class for protection now that
i know how static member vars work.............

create different datagroup structures e.g., SupportGroup for support
indices, elist,  ecap, and support graph, BestGroup for best tour
nodes and edge, lp  group for lp edges and lp object, etc. etc. and
pass groups to  initializers rather than long lists of disjointed vectors

possibly switch to unique_ptr vectors for segments and blossoms as
well, could be faster for priority queue sorting/inseration

idea: .....maybe just a CCutils.h file for things we need from
concorde along with wrappers? eg.,
struct CC with sub-structs GH (for gomoryhu), cut for st_cut
(including subtour poly)
learn to call CPXaddrowS for multiple cuts

see edgegen.c and edgegen.h, also tsp_call.c for ideas how to use
concorde to build initial edge set

tooth aggregated coefficients: instead of an ecount length vector, 
create a map of type <Int, Double> mapping edges to their coeff
to be aggregated. With some checking: can call increment/decrement
even if the entries have not yet been initialized; they should
default to zero.

-Include parameter for cut behavior: one segment cut, 2 - num_seg
 blossoms, 2 - num_blossom dp cuts, or 250 max cutcount
 -given that at most two cuts are added per round.....maybe make it so
 that branching would take place after number of rounds leading to the
 addition of atmost K cuts for some K?
