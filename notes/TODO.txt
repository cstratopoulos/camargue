change options to getopt_long

just make timer a namespace and profiler have the void print profile
functions
or maybe re-explore timer class and name class for protection now that
i know how static member vars work.............

maybe come up with a generic profiler function that operates on a list of
pairs corresponding to variables and a string for their name, and also somehow
stores an indicator for if we should report percentage/ratio/average

make it so that either ABC can take PureCut as a constructor argument,
or ABC has access to purecut.solve() from its interface?

idea: .....maybe just a CCutils.h file for things we need from
concorde along with wrappers? eg.,
struct CC with sub-structs GH (for gomoryhu), cut for st_cut
(including subtour poly)
learn to call CPXaddrowS for multiple cuts

see edgegen.c and edgegen.h, also tsp_call.c for ideas how to use
concorde to build initial edge set

tooth aggregated coefficients: instead of an ecount length vector, 
create a map of type <Int, Double> mapping edges to their coeff
to be aggregated. With some checking: can call increment/decrement
even if the entries have not yet been initialized; they should
default to zero.

LP PREFS AND ENUM PARAMETERS:
Consider making it so that, e.g., the switching prefs member of the LPprefs
class is implemented as
enum SWITCHING{
     LP::PREFS::SWITCHING::DYNAMIC,
     etc,
     etc
};

and it has a member called switching....

NAMESPACE IDEAS:

PSEP 
     LP
	Prefs, Core, Fixing, Pruning

     DATA
	LP, Best, Graphs, Support

     PureCut
	
     ABC
       BBNode, EdgeStats, Constraints	       	


should store reduced costs obtained from the root node. in branch &
cut, if an augmentation takes place, we can fix edges using reduced
costs from the root and the new best tour opt value as the integrality
gap. 
