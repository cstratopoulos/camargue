Column Generation
    Is it necessary to ever optimize the LP or do we just work with reduced
    costs (and the dual solution) from the most recent non-degenerate pivot?

Cut pruning
    If we only prune cuts after every augmentation, a great number will
    accumulate in the LP. In Concorde, cuts whose dual variable is less than
    0.001 after 10 LP solves are deleted from the LP. What might be a primal
    analogue of this? 
    Considerations:
	-LP Solves in Concorde happen only after every 250 cuts
	-One LP solve may consist of hundreds single pivots

Branching
    What variable selection rule is used? Strong, most infeasible, etc.? 
    Suppose we are in a DFS traversal of the tree, and we eventually perform
    a right branch (adding many rows). Right branches at further depth are 
    simply performed by changing the sign of these inequalities. But what if
    the right branch is fathomed, and we have to perform another right branch
    closer to the root?
    Is it possible to branch by objective function?


Notes:
-'main branching' may well not be feasible for the TSP, objective
function branching worth a shot
-Should be able to use dual solution from a given primal vertex to
price edges, or use optimality on current edge set as a pricing event
-no idea about cut pruning heuristics
-template-safe shrinking should (in theory) adapt the same to primal
case, worth checking
-branching edges are chosen by the heuristic fixing rule from the
primcut paper. this is like least-infeasible branching, except
least-infeasibility is measured by proximity to current tour. as per
achterberg, least-infeasible is bad, but this is a modification which
takes the tour into account. in general, it may be a good idea to see
if there are obvious adaptations to standard branching rules that take
the current tour into account. 
