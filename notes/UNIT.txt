ADAPTING CUT SEPARATOR CLASSES FOR UNIT TESTING

IDEA: it should be possible to rigorously test each of the cut
      separation routines independent of full runs of the program, and
      by specifying full LP solutions on graphs where we can print
      output to compare the results found by the separator

APPROACH: create a new constructor for each Cut<> class, which takes
	  as parameters
	     -an edge file (.x) specifying the LP solution
	     -a tour file (.sol) specifying the current tour
	  these should then be used to initialize any needed auxiliary
	  structures, the m_lp_edges vector, support indices,
	  etc. Then call separate on this solution.
	  -The cut queue passed to initialize could be one with large
	  capacity so that every cut found can be carefully
	  examined. Then iterate over the queue verbosely printing
	  each cut.

AUXILIARY TASKS: -write a shell script to get node coordinates from
	  	 TSPLIB files
		 -maybe a script to run drawgraph with the same set of
	  	 options every time
		 -learn about file I/O in c++
		 -Automatically save the current best tour to file
		 -Write a util function to dump a current LP solution
	  
