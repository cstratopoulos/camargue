// >>> This file is used by Camargue installation scripts to generate config.hpp
// >>> Please do not edit it directly.
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ /**
 * @file
 * @brief Configuration macros.
 *
 * This header file contains macro definitions that are used to conditionally
 * compile sections of the code based on presence or absence of certain
 * external dependences.
 */ /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

#ifndef CMR_CONFIG_H
#define CMR_CONFIG_H

/** @name Existence macros
 * These indicate certain features that are downloaded or supported by the
 * compiler. See @ref extdeps for info on all of them.
 */
///@{

/// Define if you have downloaded the header file for Catch unit testing.
#undef CMR_HAVE_CATCH

/// Define if your compiler supports OpenMP.
#undef CMR_HAVE_OMP

/// Define if you have the Cook et al. code for generating safe GMI cuts.
#undef CMR_HAVE_SAFEGMI

///@}



/** @name Usage macros
 * Catch is not threadsafe, so running Catch tests with OMP enabled
 * can cause memory leaks with thread creation/destruction. Thus, OMP is used
 * iff the compiler supports it and tests are not being ran.
 */
///@{

#if CMR_HAVE_CATCH

/// Catch configuration macro to help comile times.
#define CATCH_CONFIG_FAST_COMPILE

/// Define if you want to compile tests and invoke them from the command line.
#undef CMR_DO_TESTS

#endif //CMR_HAVE_CATCH



#ifndef CMR_DO_TESTS
#if CMR_HAVE_OMP

/// Define if OMP parallelism will actually be used in the code.
#undef CMR_USE_OMP

#endif //CMR_HAVE_OPENMP
#endif //CMR_DO_TESTS


///@}




#endif // CMR_CONFIG_H
