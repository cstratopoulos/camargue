1. 'Find a good initial tour and construct an appropriate tableau'
-Algorithm requires that we perform simplex pivots off an initial solution
-Issue here: CPLEX internally maintains a vector of the best LP solution so far. Must force CPLEX to take the LK tour as its best solution in a way that imposes LP structure as well.
-First guess: Create a degenerate LP where the feasible region is precisely the vector of the LK tour. This succeeds in forcing CPLEX to use the LK tour, but using helper functions to print the basis revealed that the degenerate LP did not have the appropriate structure
-The feasible region for this LP is not the same as the actual LP; upon calling CPLEX and then reverting to the original LP, CPLEX had discarded the basis and stored solution entirely. 
-Current solution: Temporarily change the objective function so that all edges in the tour have value 1 and all other edges have some arbitrarily high value. This creates an LP with the same feasible region but for which the tour is evidently the optimal solution; we check to make sure it is accepted as such. Moreover, this causes CPLEX to fully populate a basis which is suitable for further LP computations. Thus we change the objective function, call simplex dual opt, revert the objective function, making no further simplex calls.

Performing single simplex pivots
-The algorithm calls for the performance of single primal and dual simplex pivots, pivoting in a non-basic variable with negative reduced cost
-This was achieved by altering the parameter CPX_PARAM_ITLIM, a parameter that dictates the maximum number of simplex iterations (i.e., pivots) that will be performed in a call to cpx_primal_opt or cpx_dual_opt. Thus we write functions called primal_pivot and dual_pivot. In writing wrapper functions to call cpx_primal_opt or cpx_dual_opt, one includes tests for status messages indicating successful or faulty execution. One possible 'failed' status message is that the iteration limit was reached before optimality. Thus, our pivot functions accept this failure message as a success, indicating that the iteration limit of one iteration was reached, possibly without reaching the optimum.
-A call to one of the pivot functions clamps and then reverts the iteration limit, reporting if there was a failure in either of these.

Writing conditions for loop termination:
-Some loops involve pivoting repeatedly until obtaining a non-degenerate pivot, and we would like the loop to terminate when an optimal fractional solution (or tour) has been obtained
-Initial testing with the canonical 6-city 2-factor example shows that CPLEX solution status will report ITLIM with higher priority than optimality. That is, we can perform pivots such that the optimal 2-factor solution to the degree LP will be reached, but CPLEX will report the status as aborted due to ITLIM rather than optimal...
